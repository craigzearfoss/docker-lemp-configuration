FROM php:7-3-fpm

# Arguments defined in docker-compose.yml
ARG user
ARG uid

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    wget \
    zip \
    unzip

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions (Needed for CodeIgniter)
RUN docker-php-ext-install pdo pdo_mysql mbstring exif pcntl bcmath gd

# Install intl PHP extension
RUN apt-get -y update \
    && apt-get install -y libicu-dev \
    && docker-php-ext-configure intl \
    && docker-php-ext-install intl

# Needed for CodeIgniter
RUN docker-php-ext-install mysqli

# Install XDebug
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.remote_host = host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Install vim and nano
RUN apt-get -y update \
    && apt-get install -y vim nano

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# SECTION:nodejs

# Copy the script that builds the project
COPY /create_project.sh /var/www/create_project.sh
RUN chmod +x /var/www/create_project.sh

# Set working directory
WORKDIR /var/www

USER $user
